import cv2
import numpy as np

# === 1. Load Image ===
image_path = r"C:\Users\YourUser\Desktop\car_plate.jpg"  # Use full path
image = cv2.imread(image_path)

# === 2. Define Polygon Coordinates ===
polygon_pts = np.array([[934, 845], [1171, 836], [1167, 906], [931, 916]], dtype=np.float32)

# Compute bounding box dimensions
w = int(np.linalg.norm(polygon_pts[0] - polygon_pts[1]))  # Width
h = int(np.linalg.norm(polygon_pts[1] - polygon_pts[2]))  # Height

# Define the transformed rectangle for perspective correction
dst_pts = np.array([[0, 0], [w, 0], [w, h], [0, h]], dtype=np.float32)

# === 3. Apply Perspective Transformation ===
M = cv2.getPerspectiveTransform(polygon_pts, dst_pts)
plate = cv2.warpPerspective(image, M, (w, h))

# === 4. Remove Old Text Using Inpainting ===
gray_plate = cv2.cvtColor(plate, cv2.COLOR_BGR2GRAY)
_, mask = cv2.threshold(gray_plate, 180, 255, cv2.THRESH_BINARY_INV)
plate_clean = cv2.inpaint(plate, mask, inpaintRadius=3, flags=cv2.INPAINT_TELEA)

# === 5. Add New Text Using OpenCV (No External Fonts) ===
new_text = "A123BC 77"  # New license plate number
text_x, text_y = 20, h // 2  # Adjust text position
cv2.putText(plate_clean, new_text, (text_x, text_y), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 0), 2, cv2.LINE_AA)

# === 6. Apply Reverse Perspective Transform ===
M_inv = cv2.getPerspectiveTransform(dst_pts, polygon_pts)
plate_warped_back = cv2.warpPerspective(plate_clean, M_inv, (image.shape[1], image.shape[0]))

# Create a mask to blend the new plate onto the original image
mask_warped = cv2.warpPerspective(np.ones_like(plate_clean, dtype=np.uint8) * 255, M_inv, (image.shape[1], image.shape[0]))

# Blend the new plate with the original image
image[mask_warped > 0] = plate_warped_back[mask_warped > 0]

# === 7. Save and Show the Final Image ===
cv2.imwrite("car_plate_modified.jpg", image)
cv2.imshow("Modified License Plate", image)
cv2.waitKey(0)
cv2.destroyAllWindows()
